@import 'mixins.less';

.icon-button {
  .iconButtonBaseMixin();
}

.dialog .dialog-buttons button {
  .clickableBlockMixin();
  border-radius: var(--ironsworn-border-radius-md);
  border-width: var(--ironsworn-border-width-md);
  border-style: solid;
}

.dialog .dialog-buttons {
  height: max-content;
  button {
    display: flex;
    align-items: center;
    justify-content: center;
    .button-text {
      flex-grow: 0;
      .initialCapsMixin();
      width: max-content;
      height: max-content;
    }
  }
}

.ironsworn button {
  margin: 0;
}

.entity-link,
.content-link {
  transition: var(--std-animation);
  background-color: var(--ironsworn-color-clickable-block-bg);
  border-color: var(--ironsworn-color-clickable-block-border);
  .clickableTextMixin();

  i {
    transition: var(--std-animation);
    color: var(--ironsworn-color-clickable-text);
  }
  &:hover {
    text-shadow: none;
    background-color: var(--ironsworn-color-clickable-block-bg-hover);
    border-color: var(--ironsworn-color-clickable-block-border-hover);
    i {
      color: var(--ironsworn-color-clickable-text-hover);
      text-shadow: none;
    }
  }
}

.clickable {
  border: none;
  box-sizing: border-box;
  background: none;
  outline: none;
  box-shadow: none;
  .interactiveMixin();

  &:not(svg):not(.svg) {
    &.text {
      justify-content: flex-start;
      .clickableTextMixin();
    }
    &.block {
      .clickableBlockMixin(0px, var(--ironsworn-vertical-slider-width));
    }
  }
  svg,
  &.svg {
    &.selected,
    &[aria-selected='true'] {
      fill-opacity: 1;
    }
    &.hover,
    &:hover {
      fill-opacity: 0.35;
    }
    &:active {
      fill-opacity: 0.5;
    }
  }
}

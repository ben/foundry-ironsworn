@import 'mixins.less';
@import 'clickable.less';

.inputFieldFocusMixin(@spread: 7px) {
  color: var(--ironsworn-color-fg-highlight);
  .borderGlowExteriorMixin(@spread);
}

.inputFieldMixin(@spread:4px) {
  border: var(--ironsworn-border-width-md) inset
    var(--ironsworn-color-border-muted);
  color: var(--ironsworn-color-fg);
  background: var(--ironsworn-color-input-bg);
  transition: var(--std-animation);

  border-radius: var(--ironsworn-border-radius-md);
  &::placeholder {
    color: var(--ironsworn-color-fg);
    opacity: 0.5;
  }
  &:hover {
    border-color: var(--ironsworn-color-clickable-block-border);
    .borderGlowInteriorMixin(@spread,0,var(--color-shadow-primary));
  }
  &:focus,
  &:focus-within {
    .inputFieldFocusMixin();
  }
}

// NATIVE INPUTS

input[type='text'],
input[type='number'],
input[type='password'],
input[type='date'],
input[type='time'],
input[type='search'],
textarea {
  .inputFieldMixin();
  caret-color: var(--ironsworn-color-fg-highlight);
}

select {
  .inputFieldMixin();
}

// EDITORS
.tox {
  :not(svg):not(rect) {
    color: var(--ironsworn-color-fg);
  }
  .tox-tinymce {
    border-radius: 0;
  }
  .tox-toolbar-overlord,
  .tox-toolbar__primary,
  &:not(.tox-tinymce-inline) .tox-editor-header {
    color: var(--ironsworn-color-fg);
    background-color: var(--ironsworn-color-bg);
  }
  .tox-edit-area {
    .inputFieldMixin();
  }
  .tox-tbtn {
    &--select {
      background: var(--ironsworn-color-input-bg);
    }
    transition: var(--std-animation);
    background-color: var(--ironsworn-color-clickable-block-bg);
    svg {
      fill: var(--ironsworn-color-clickable-block-fg);
      transition: var(--std-animation);
    }
    &:hover {
      background-color: var(--ironsworn-color-clickable-block-bg-hover);
      svg {
        fill: var(--ironsworn-color-clickable-block-fg-hover);
      }
    }
    &[aria-pressed='true'] {
      background-color: var(--ironsworn-color-clickable-block-bg-selected);
      svg {
        fill: var(--ironsworn-color-clickable-block-fg-selected);
      }
    }
  }
}
.editor {
  border-width: 0;
  height: 100%;
  min-height: 100px;
  .editor-content {
    height: inherit;
    min-height: inherit;
  }
  .editor-edit {
    .clickableBlockMixin(var(--ironsworn-border-width-md));
  }
}

.ProseMirror {
  .inputFieldMixin();
  padding: 0.5rem;
}

input {
  &[type='checkbox'],
  &[type='radio'] {
    accent-color: var(--ironsworn-color-fg);
    cursor: pointer;
  }
}
label.checkbox {
  cursor: pointer;
}

input[type='number'] {
  -moz-appearance: auto;
  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    -webkit-appearance: button !important;
    opacity: 1 !important;
  }
}

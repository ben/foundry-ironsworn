@use 'mixin:decoration.scss';
@use 'sass:math';
@use 'mixin:text.scss';

// Here we encode the bullet styles as classes, and pull them into the
// ul>li bullet class from there. These will also be available for block
// elements
@mixin assetAbilityBullet {
  display: block;
  transition: var(--ironsworn-transition);
  background-position: center;
  background-repeat: no-repeat;
  mask-position: center;
  mask-repeat: no-repeat;
}

@mixin assetAbilityBulletMarked {
  background-color: currentcolor;
}

@mixin assetAbilityBulletIronsworn {
  margin-top: 0.15em;
  border-width: var(--ironsworn-border-width-md);
  border-radius: 50%;
  height: 0.75em;
  aspect-ratio: 1;
}

@mixin assetAbilityBulletStarforged {
  margin-top: 0.15em;
  background-image: url('../../system/assets/misc/hex-checkbox-unchecked.svg');
  height: 1em;
  aspect-ratio: var(--ironsworn-hexagon-aspect-ratio);
  mask-image: url('../../system/assets/misc/hex-checkbox-checked.svg');
}

@mixin assetAbilityBulletStarforgedMarked {
  --ironsworn-bullet-height: 1em;
  --ironsworn-bullet-margin-top: 0.15em;

  mask-image: url('../../system/assets/misc/hex-checkbox-checked.svg');
  margin-top: var(--ironsworn-bullet-margin-top);
  background-image: url('../../system/assets/misc/hex-checkbox-unchecked.svg');
  height: var(--ironsworn-bullet-height);
  aspect-ratio: var(--ironsworn-hexagon-aspect-ratio);
}

.ironsworn__asset {
  transition: var(--ironsworn-transition);
  overflow: hidden;

  .asset-header {
    gap: var(--ironsworn-spacer-lg);
    align-items: center;

    .asset-expand-toggle {
      display: flex;
      flex-flow: row wrap;
      gap: var(--ironsworn-spacer-lg);
      transition: var(--ironsworn-transition);
      box-shadow: none !important;
      background: none;
    }

    .asset-title {
      transition: inherit;
      margin: 0;
      text-transform: uppercase;
      line-height: 1;
      word-spacing: var(--ironsworn-word-spacing-sm);
      letter-spacing: var(--ironsworn-letter-spacing-sm);
      font-size: var(--font-size-14);
      font-weight: bold;
    }

    .asset-type {
      flex-grow: 0;
      transition: inherit;
      line-height: 1;
      color: var(--ironsworn-color-thematic);
      font-style: italic;
    }

    .asset-controls {
      display: flex;
      flex-grow: 0;
      flex-wrap: nowrap;
      justify-items: flex-end;
    }
  }

  .asset-body {
    gap: var(--ironsworn-spacer-lg);
    transition: var(--ironsworn-transition);
    padding: var(--ironsworn-spacer-sm);
    overflow: hidden;

    .asset-fields {
      display: flex;
      flex-direction: column;
      margin: 0;

      .asset-field {
        display: flex;
        flex-direction: row;
        flex-grow: 0;
        gap: var(--ironsworn-spacer-sm);
        border-bottom-width: var(--ironsworn-border-width-md);
        border-bottom-style: solid;
        border-bottom-color: var(--ironsworn-color-thematic);

        .asset-field-label {
          margin: 0;
          padding: 0;
        }

        .asset-field-value {
          flex-grow: 1;
          margin: 0;
          padding: 0 var(--ironsworn-spacer-sm);
        }
      }
    }

    .asset-abilities {
      gap: var(--ironsworn-spacer-lg);
      padding-left: var(--ironsworn-spacer-lg);

      .asset-ability {
        display: flex;
        flex-direction: row;
        gap: var(--ironsworn-spacer-lg);
        list-style: none;
      }
    }
  }

  .asset-ability-clock {
    --ironsworn-clock-size-min: 40px;
    --ironsworn-clock-size-max: 75px;

    min-width: var(--ironsworn-clock-size-min);
    max-width: var(--ironsworn-clock-size-max);
    min-height: var(--ironsworn-clock-size-min);
    max-height: var(--ironsworn-clock-size-max);
  }

  .asset-ability-text {
    p {
      margin: 0;
    }
  }

  ul,
  ol {
    margin: 0;
  }
}

.asset-condition-meter {
  gap: var(--ironsworn-spacer-sm);

  .icon-button .button-text {
    text-align: left;
  }

  .slider-segment {
    --ironsworn-text-stroke-color: var(--ironsworn-dark-color);

    @include text.stroke;
  }
}

.asset-ability-bullet {
  @include assetAbilityBullet;
}

.asset-ability-bullet-marked {
  @include assetAbilityBulletMarked;
}

.asset-ability-bullet-ironsworn {
  @include assetAbilityBulletIronsworn;
}

.asset-ability-bullet-starforged {
  @include assetAbilityBulletStarforged;
}

.asset-ability-bullet-starforged-marked {
  @include assetAbilityBulletStarforgedMarked;
}

.asset-ironsworn,
.asset-starforged {
  // common properties for asset ability bullet/checkbox
  .asset-ability {
    &::before {
      @include assetAbilityBullet;

      content: '';
    }

    &.marked::before {
      @include assetAbilityBulletMarked;
    }
  }
}

.asset-ironsworn {
  .asset-ability {
    &::before {
      @include assetAbilityBulletIronsworn;
    }
  }
}

.asset-starforged {
  @include decoration.starforgedAssetDeco(50px, 32px);

  .asset-abilities {
    .asset-ability {
      &::before {
        @include assetAbilityBulletStarforged;
      }

      &.marked::before {
        @include assetAbilityBulletStarforgedMarked;
      }
    }
  }
}
